
plugins {
    id 'maven-publish'
//    id 'net.minecraftforge.gradleutils'
    id 'net.minecraftforge.gradle'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}
//
//gradleutils {
//    version {
//        tags {
//            includeFilter('10.0')
//        }
//        branches {
//            suffixBranch()
//            suffixExemptedBranch('main')
//        }
//    }
//}

version = "1.0.0" //gradleutils.version.toString()

group = 'net.forgecraft.serverpacklocator'

sourceSets {
    utilmod
}

minecraft {
    mappings channel: 'official', version: '1.20.1'
    accessTransformers = file("src/utilmod/resources/META-INF/accesstransformer.cfg")

    runs {
        client {
            workingDirectory project.file('runs/client')

            mods {
                spl {
                    source sourceSets.main
                }
                utilmod {
                    source sourceSets.utilmod
                }
            }
        }

        server {
            workingDirectory project.file('runs/server')

            mods {
                spl {
                    source sourceSets.main
                }
                utilmod {
                    source sourceSets.utilmod
                }
            }
        }
    }
}

configurations {
    utilmodCompileClasspath.extendsFrom compileClasspath
}

def jarUtilMod = tasks.register(sourceSets.utilmod.jarTaskName, Jar) {
    archiveClassifier = "utilmod"
    from(sourceSets.utilmod.output)
}

def copyUtilMod = tasks.register("copyUtilMod", Copy) {
    from(jarUtilMod)
    into(layout.buildDirectory.dir("generated/splUtilMod"))
    rename {
        // The shadow plugin says we should rename this to not have a .jar ending
        return "serverpacklocator-utilmod.embedded"
    }
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
    withSourcesJar()
}

jar.configure {
    archiveClassifier = "plain"
    manifest {
        attributes(
                'Automatic-Module-Name': 'serverpacklocator'
        )
    }
}

shadowJar {
    archiveClassifier = ""
    from(copyUtilMod)
    configurations = [project.configurations.shadow]
    relocate 'io.netty.handler.codec.http', 'net.forgecraft.serverpacklocator.shadow.io.netty.handler.codec.http'
    relocate 'io.netty.handler.codec.rtsp', 'net.forgecraft.serverpacklocator.shadow.io.netty.handler.codec.rtsp'
    relocate 'io.netty.handler.codec.spdy', 'net.forgecraft.serverpacklocator.shadow.io.netty.handler.codec.spdy'
    relocate 'com.electronwill.nightconfig.json', 'net.forgecraft.serverpacklocator.shadow.com.electronwill.nightconfig.json'
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.20.1-47.1.3'

    shadow("io.netty:netty-codec-http:4.1.97.Final") {
        transitive = false
    }
    shadow("com.electronwill.night-config:json:3.6.4") {
        transitive = false
    }

    utilmodCompileOnly sourceSets.main.output
    runtimeOnly sourceSets.utilmod.output
}

assemble.dependsOn shadowJar
